<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>emacs on Lambda Land</title>
    <link>https://lambdaland.org/tags/emacs/</link>
    <description>Recent content in emacs on Lambda Land</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://lambdaland.org/tags/emacs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Warp Factor Refactoring in Emacs</title>
      <link>https://lambdaland.org/posts/2023-05-31_warp_factor_refactor/</link>
      <pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lambdaland.org/posts/2023-05-31_warp_factor_refactor/</guid>
      <description>Here&amp;rsquo;s a nifty Emacs workflow for doing a project-wide search-and-replace on steroids. While I do use refactor tools that come with language servers,1 sometimes those aren&amp;rsquo;t enough. Consider the case where you not only need to change the name of a function, but also e.g. need to swap the order of two of its arguments. Or you&amp;rsquo;ve broken one function out into two that need to be chained together. Whateverâ€”there are plenty of ways where the IDE won&amp;rsquo;t be able to do everything that you need.</description>
    </item>
    
    <item>
      <title>Using a Real Mail Client with Outlook</title>
      <link>https://lambdaland.org/posts/2023-05-03_email_with_outlook/</link>
      <pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lambdaland.org/posts/2023-05-03_email_with_outlook/</guid>
      <description>I recently managed to get access to my Outlook email from Emacs. This took some doing as my university had disabled app passwords. I consider Outlook to be harmful, but inasmuch as companies and schools continue to enforce OAUTH-only authentication with email systems, it is good to find workarounds.
This is how I set up email sending/receiving on my computer running macOS with DavMail. I also use mbsync (confusingly also known as isync) to actually fetch my email, and mu/mu4e to index and read mail.</description>
    </item>
    
    <item>
      <title>Make an Emacs Buffer Open the Way You Want</title>
      <link>https://lambdaland.org/posts/2022-12-27_repl_buffer_on_the_right/</link>
      <pubDate>Tue, 27 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://lambdaland.org/posts/2022-12-27_repl_buffer_on_the_right/</guid>
      <description>Are you tired of having a particular buffer pop open in the wrong direction? Do you wish, for example, that the Racket REPL buffer showed up on the right in a vertical split, rather than below in a horizontal one? Look no further. I give you, display-buffer-alist:
(add-to-list &amp;#39;display-buffer-alist &amp;#39;(&amp;#34;\\*Racket REPL &amp;lt;/&amp;gt;\\*&amp;#34; (display-buffer-in-direction) (direction . right))) That little snippet will make sure when you hit C-c C-k inside of a racket-mode buffer, a REPL will pop up on the right-side instead of on the bottom.</description>
    </item>
    
    <item>
      <title>Unix as a tool forge</title>
      <link>https://lambdaland.org/posts/2022-11-07_unix_philosophy/</link>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://lambdaland.org/posts/2022-11-07_unix_philosophy/</guid>
      <description>Wikipedia1 cites a few different sources on what &amp;#34;Unix Philosophy&amp;#34; is. Peter Salus summarizes it as:
Write programs that do one thing and do it well. Write programs to work together. Write programs to handle text streams, because that is a universal interface. That second bullet point is my favorite: making composable programs rather than monolithic systems. In this way, Unix is designed to be a forge for easily building new tools.</description>
    </item>
    
    <item>
      <title>Adding a Clock to the Tab-Bar in Emacs 28</title>
      <link>https://lambdaland.org/posts/2022-07-20_adding_a_clock_to_emacs/</link>
      <pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://lambdaland.org/posts/2022-07-20_adding_a_clock_to_emacs/</guid>
      <description>Today I figured out how to add a tab-bar to Emacs. I didn&amp;rsquo;t like having it in the mode-line: it gets duplicated for every window and my mode-line space is precious. In contrast, the right side of the tab-bar was always blank.</description>
    </item>
    
    <item>
      <title>Class Management Reviews: Fall 2021</title>
      <link>https://lambdaland.org/posts/2021-12-18_classroom_management_reviews/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lambdaland.org/posts/2021-12-18_classroom_management_reviews/</guid>
      <description>&lt;p&gt;A collection of what worked well and what didn&amp;rsquo;t in classes that I took this semester. This is partially for me to record what things reduced friction for me as a student so that one day, should I become a professor, I&amp;rsquo;ll be able to run the lowest-friction class ever!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RMS Does Not See the Future of Emacs</title>
      <link>https://lambdaland.org/posts/2020-11-future-of-emacs/</link>
      <pubDate>Fri, 27 Nov 2020 23:32:47 +0000</pubDate>
      
      <guid>https://lambdaland.org/posts/2020-11-future-of-emacs/</guid>
      <description>&lt;p&gt;I am an avid &lt;a href=&#34;https://emacs.org&#34;&gt;Emacs&lt;/a&gt; user. I&amp;rsquo;m using it right now to compose this post. I use it every single day for everything from work to school to personal notes. Most of my activity on GitHub comes from me tweaking little things in my configuration files. I now have an editor that perfectly fits my hands. Emacs is a big part of my life.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m afraid it&amp;rsquo;s dying.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Transitioning to GUI&#39;d Emacs on macOS</title>
      <link>https://lambdaland.org/posts/2020-07-22-gui-emacs/</link>
      <pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lambdaland.org/posts/2020-07-22-gui-emacs/</guid>
      <description>I went on an adventure today. I left behind the stable comforts of the terminal and compiled bleeding-edge Emacs that uses a native window system.
This is a big deal for me. As long as I can remember, I&amp;rsquo;ve used Emacs from within a terminal. I&amp;rsquo;ve decided to give the GUI&amp;rsquo;d Emacs a whirl.
My Journey # I&amp;rsquo;m running macOS Catalina (10.15.5). Originally I tried using the pre-built packages via brew (brew cask install emacs) and those available at Emacs for Mac OS X.</description>
    </item>
    
    <item>
      <title>Switching from Helm to Ivy</title>
      <link>https://lambdaland.org/posts/2019-12-13-switching-to-ivy-from-helm/</link>
      <pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lambdaland.org/posts/2019-12-13-switching-to-ivy-from-helm/</guid>
      <description>Yet again, I&amp;rsquo;ve tweaked my emacs configuration. The big change this time is switching to Ivy from Helm.
I&amp;rsquo;d like to say right off the bat that Helm is a great tool. I used it for several months and enjoyed it. Once thing that I love about helm is how discoverable it makes commands and functions. helm also got me into using bookmarks. I don&amp;rsquo;t keep many bookmarks; I tend to collect a few when working on a multi-file project long-term.</description>
    </item>
    
  </channel>
</rss>
